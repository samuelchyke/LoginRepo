plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    id 'kotlin-android'
    id 'kotlin-parcelize'

    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.studentbeans"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    def compose = "1.2.0-beta01"
    implementation "androidx.compose.foundation:foundation:$compose"
    implementation "androidx.compose.runtime:runtime-livedata:$compose"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose"
    implementation "androidx.compose.material:material:$compose"
    implementation "androidx.compose.material:material-icons-core:$compose"
    implementation "androidx.compose.material:material-icons-extended:$compose"

    // Appcompat
    def appcompat_version = "1.5.1"
    implementation("androidx.appcompat:appcompat:$appcompat_version")
    implementation("androidx.fragment:fragment-ktx:$appcompat_version")
    implementation("androidx.appcompat:appcompat-resources:$appcompat_version")

    // Compose Navigation
    def compose_nav_version = "2.5.3"
    implementation("androidx.navigation:navigation-compose:$compose_nav_version")

    // Coroutine
    def coroutine_version = "1.6.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"

    // Lifecycle
    def lifecycle_version = "2.4.3"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // lifecycleScope:
    def scope_version = "2.6.0-alpha01"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$scope_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$scope_version"

    // Hilt
    def hilt_version = "2.42"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Retrofit Network
    def retrofit_version = "2.9.0"
    implementation "com.google.code.gson:gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    // Okhttp
    def okhttp_version = "4.9.3"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //Image Loading
    def landscape_version = "2.0.0"
    implementation "com.github.skydoves:landscapist-coil:$landscape_version"
    implementation "com.github.skydoves:landscapist-placeholder:$landscape_version"

    kapt 'com.github.bumptech.glide:compiler:4.13.0'

    // Testing
    testImplementation 'org.mockito:mockito-core:3.10.0'
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.1"
    implementation 'androidx.test.ext:truth:1.4.0'
    testImplementation 'org.robolectric:robolectric:4.8'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1"
    testImplementation "com.google.truth:truth:1.1.3"

    // JUnit 5
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")

    // (Optional) If you need "Parameterized Tests"
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.2")

    // (Optional) If you also have JUnit 4-based tests
    testImplementation("junit:junit:4.13.2")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.8.2")
    testImplementation "android.arch.core:core-testing:1.1.1"
}